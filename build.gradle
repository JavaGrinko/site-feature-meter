buildscript {
    ext {
        springBootVersion = '1.3.0.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'org.hidetake.ssh' version '1.3.0'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'
apply plugin: 'idea'
apply plugin: 'war'
apply plugin: 'groovy'
apply plugin: 'spring-boot'
//apply from: 'http://plugins.jasoft.fi/vaadin.plugin'
apply from: 'src/main/resources/vaadin.plugin'

jar {
    baseName = 'site-feature-meter'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

vaadin.widgetset = "webapp.Widgetset"

repositories {
    mavenCentral()
    maven{
        url "http://maven.vaadin.com/vaadin-addons"
    }
}


dependencies {
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    compile('org.springframework.boot:spring-boot-starter-data-mongodb')
    compile 'org.springframework:spring-aspects:4.2.3.RELEASE'
    compile('org.springframework.boot:spring-boot-starter-web')
    compile("com.vaadin:vaadin-client-compiled:7.5.5")
    compile('com.vaadin:vaadin-spring-boot-starter:1.0.0')
    compile('com.vaadin.addon:vaadin-charts:3.0.0-alpha7')
    compile 'joda-time:joda-time:2.9.1'
    compile 'org.codehaus.groovy:groovy-all:2.4.5'
    testCompile('org.springframework.boot:spring-boot-starter-test')
}


dependencyManagement {
	imports { 
		mavenBom "com.vaadin:vaadin-bom:7.5.5" 
	}
}


eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}

remotes {
    webServer {
        host = "$vnsHost"
        user = 'root'
        //identity = file('C:/Users/Grinch/.ssh/id_rsa')
        knownHosts = allowAnyHosts
        password = "$vnsPassword"
    }
}

task deploy << {
    ssh.run {
        session(remotes.webServer) {
            //put 'C:\\Workspace\\site-feature-meter\\build\\libs\\site-feature-meter.war', '/opt/apache-tomcat-8.0.32/webapps/'
            //execute './opt/apache-tomcat-8.0.32/bin/shutdown.sh'
            //execute './opt/apache-tomcat-8.0.32/bin/startup.sh'
        }
    }
}
